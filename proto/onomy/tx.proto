syntax = "proto3";
package onomyprotocol.onomy.onomy;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/onomyprotocol/onomy/x/onomy/types";

// Msg defines the Msg service.
service Msg {
    // this line is used by starport scaffolding # proto/tx/rpc
  rpc CreatePair(MsgCreatePair) returns (MsgCreatePairResponse);
  rpc UpdatePair(MsgUpdatePair) returns (MsgUpdatePairResponse);
  rpc DeletePair(MsgDeletePair) returns (MsgDeletePairResponse);
  rpc CreateOrder(MsgCreateOrder) returns (MsgCreateOrderResponse);
  rpc UpdateOrder(MsgUpdateOrder) returns (MsgUpdateOrderResponse);
  rpc DeleteOrder(MsgDeleteOrder) returns (MsgDeleteOrderResponse);
}

// this line is used by starport scaffolding # proto/tx/message
message MsgCreatePair {
  string creator = 1;
  string bid = 2;
  string ask = 3;
}

message MsgCreatePairResponse {
  uint64 id = 1;
}

message MsgUpdatePair {
  string creator = 1;
  uint64 id = 2;
  string bid = 3;
  string ask = 4;
}

message MsgUpdatePairResponse { }

message MsgDeletePair {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeletePairResponse { }

message MsgCreateOrder {
  string creator = 1;
  string account = 2;
  string amount = 3;
  string bid = 4;
  string ask = 5;
  string exchRate = 6;
}

message MsgCreateOrderResponse {
  uint64 id = 1;
}

message MsgUpdateOrder {
  string creator = 1;
  uint64 id = 2;
  string account = 3;
  string amount = 4;
  string bid = 5;
  string ask = 6;
  string exchRate = 7;
}

message MsgUpdateOrderResponse { }

message MsgDeleteOrder {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteOrderResponse { }
